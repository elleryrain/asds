// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// FileIDGet implements GET /file/{id} operation.
	//
	// Получает файл из MinIO по уникальному идентификатору.
	//
	// GET /file/{id}
	FileIDGet(ctx context.Context, params FileIDGetParams) (FileIDGetRes, error)
	// FileIDHead implements HEAD /file/{id} operation.
	//
	// Получает мету файла из MinIO по уникальному
	// идентификатору.
	//
	// HEAD /file/{id}
	FileIDHead(ctx context.Context, params FileIDHeadParams) (FileIDHeadRes, error)
	// UploadPost implements POST /upload operation.
	//
	// Загружает файл в MinIO с использованием JWT токена для
	// аутентификации.
	//
	// POST /upload
	UploadPost(ctx context.Context, req *UploadPostReq, params UploadPostParams) (UploadPostRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
