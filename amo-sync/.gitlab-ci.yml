image: docker:latest
services:
  - docker:dind
stages:
  - build
  - deploy
  - release

variables:
  REMOTE_USER: "ubrato"
  REMOTE_HOST: "194.58.96.228"
  REMOTE_PORT: "2022"

prod-build:
  only: [master]
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -f ./deployments/Dockerfile --build-arg GIT_VERSION=$CI_COMMIT_SHORT_SHA --pull -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:latest"

stage-build:
  only: [stage]
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -f ./deployments/Dockerfile --build-arg GIT_VERSION=$CI_COMMIT_SHORT_SHA --pull -t "$CI_REGISTRY_IMAGE:stage" .
    - docker push "$CI_REGISTRY_IMAGE:stage"

tags-release-build:
  only: [tags]
  stage: release
  script:
    - docker login -u $CI_REGISTRY_USER -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -f ./deployments/Dockerfile --build-arg GO_VER=$CI_COMMIT_SHORT_SHA --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"

prod-deploy:
  only: [master]
  stage: deploy
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - cp $KNOWN_HOSTS ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT "docker service update --with-registry-auth --image $CI_REGISTRY_IMAGE:latest stack_amo-sync"

stage-deploy:
  only: [stage]
  stage: deploy
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - cp $KNOWN_HOSTS ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT "docker service update --with-registry-auth --image $CI_REGISTRY_IMAGE:stage stage_amo-sync"